# Generated by Django 3.2.13 on 2022-04-28 07:18

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("permits", "0064_add_field_can_always_update_in_WorksObjectType"),
    ]

    operations = [
        migrations.AddField(
            model_name="historicalpermitrequestgeotime",
            name="comes_from_automatic_geocoding",
            field=models.BooleanField(
                default=False, verbose_name="Géométrie obtenue par géocodage d'adresse"
            ),
        ),
        migrations.AddField(
            model_name="permitrequestgeotime",
            name="comes_from_automatic_geocoding",
            field=models.BooleanField(
                default=False, verbose_name="Géométrie obtenue par géocodage d'adresse"
            ),
        ),
        migrations.AddField(
            model_name="worksobjectproperty",
            name="additional_searchtext_for_address_field",
            field=models.CharField(
                blank=True,
                help_text='Ex: "Yverdon-les-Bains" afin de limiter les recherches à Yverdon, <a href="https://api3.geo.admin.ch/services/sdiservices.html#search" target="_blank">Plus d\'informations</a>',
                max_length=255,
                verbose_name="Filtre additionnel pour la recherche d'adresse",
            ),
        ),
        migrations.AddField(
            model_name="worksobjectproperty",
            name="store_geometry_for_address_field",
            field=models.BooleanField(
                default=False,
                help_text="L'API Geoadmin est utilisée afin de trouver un point correspondant à l'adresse. En cas d'échec, le centroïde de l'entité administrative est utilisée <a href=\"https://api3.geo.admin.ch/services/sdiservices.html#search\" target=\"_blank\">Plus d'informations</a>",
                verbose_name="Stocker la géométrie de l'adresse dans la table géométrique",
            ),
        ),
    ]
