# Generated by Django 3.2.13 on 2022-06-09 06:35

import django.db.models.deletion
import permits.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("permits", "0071_add_sites_m2m_relations_for_administrative_entities"),
    ]

    operations = [
        migrations.CreateModel(
            name="ComplementaryDocumentType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="nom")),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permits.complementarydocumenttype",
                        verbose_name="Type parent",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PermitRequestComplementaryDocument",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document",
                    permits.fields.ComplementaryDocumentFileField(
                        storage=permits.fields.PrivateFileSystemStorage(),
                        upload_to="",
                        verbose_name="Document",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, verbose_name="Description du document"
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Provisoire"),
                            (1, "Final"),
                            (2, "Autre"),
                            (3, "Annulé"),
                        ],
                        verbose_name="Statut du document",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=False, verbose_name="Public"),
                ),
                (
                    "authorised_departments",
                    models.ManyToManyField(
                        db_table="permits_authorised_departments",
                        to="permits.PermitDepartment",
                        verbose_name="Département autorisé à visualiser le document",
                    ),
                ),
                (
                    "document_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="permits.complementarydocumenttype",
                        verbose_name="Type du document",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Propriétaire du document",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="worksobjecttype",
            name="document_enabled",
            field=models.BooleanField(
                default=False, verbose_name="Activer la gestion des documents"
            ),
        ),
        migrations.AddField(
            model_name="worksobjecttype",
            name="permanent_publication_enabled",
            field=models.BooleanField(
                default=False,
                verbose_name="Autoriser la mise en consultation sur une durée indéfinie",
            ),
        ),
        migrations.AddField(
            model_name="worksobjecttype",
            name="publication_enabled",
            field=models.BooleanField(
                default=False, verbose_name="Activer la gestion de la publication"
            ),
        ),
        migrations.AlterField(
            model_name="historicalpermitrequest",
            name="status",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "Brouillon"),
                    (1, "Envoyée, en attente de traitement"),
                    (4, "Demande de compléments"),
                    (3, "En traitement"),
                    (5, "En validation"),
                    (2, "Approuvée"),
                    (6, "Refusée"),
                    (7, "Réceptionnée"),
                    (8, "Consultation publique en cours"),
                    (9, "Archivée"),
                ],
                default=0,
                verbose_name="état",
            ),
        ),
        migrations.AlterField(
            model_name="permitrequest",
            name="status",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "Brouillon"),
                    (1, "Envoyée, en attente de traitement"),
                    (4, "Demande de compléments"),
                    (3, "En traitement"),
                    (5, "En validation"),
                    (2, "Approuvée"),
                    (6, "Refusée"),
                    (7, "Réceptionnée"),
                    (8, "Consultation publique en cours"),
                    (9, "Archivée"),
                ],
                default=0,
                verbose_name="état",
            ),
        ),
        migrations.AlterField(
            model_name="permitworkflowstatus",
            name="status",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "Brouillon"),
                    (1, "Envoyée, en attente de traitement"),
                    (4, "Demande de compléments"),
                    (3, "En traitement"),
                    (5, "En validation"),
                    (2, "Approuvée"),
                    (6, "Refusée"),
                    (7, "Réceptionnée"),
                    (8, "Consultation publique en cours"),
                    (9, "Archivée"),
                ],
                verbose_name="statut",
            ),
        ),
        migrations.CreateModel(
            name="PermitRequestInquiry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "documents",
                    models.ManyToManyField(
                        blank=True,
                        to="permits.PermitRequestComplementaryDocument",
                        verbose_name="Documents complémentaire",
                    ),
                ),
                (
                    "permit_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="permits.permitrequest",
                        verbose_name="Demande de permis",
                    ),
                ),
                (
                    "submitter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Demandeur de l'enquête",
                    ),
                ),
            ],
            options={
                "verbose_name": "3.2 Enquête public",
                "verbose_name_plural": "3.2 Enquêtes publics",
            },
        ),
        migrations.AddField(
            model_name="permitrequestcomplementarydocument",
            name="permit_request",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="permits.permitrequest",
                verbose_name="Demande de permis",
            ),
        ),
        migrations.AddField(
            model_name="complementarydocumenttype",
            name="work_object_types",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="permits.worksobjecttype",
                verbose_name="Objets",
            ),
        ),
        migrations.CreateModel(
            name="ArchivedPermitRequest",
            fields=[
                ("archived_date", models.DateTimeField(auto_now_add=True)),
                (
                    "permit_request",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="permits.permitrequest",
                    ),
                ),
                (
                    "archivist",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Personne ayant archivé la demande",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="complementarydocumenttype",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("parent__isnull", False), ("work_object_types__isnull", True)
                    ),
                    models.Q(
                        ("parent__isnull", True), ("work_object_types__isnull", False)
                    ),
                    _connector="OR",
                ),
                name="Only parent types can be linked to a work object type",
            ),
        ),
    ]
